import os
import pandas as pd
from datetime import datetime
from engine.datafeed import candles_to_df
from engine.broker_angel import AngelBroker

TRADE_PLAN_DIR = "data/trade_plans"
CANDLE_DIR = "data/candles"
PAPER_TRADE_DIR = "data/paper_trades"
os.makedirs(PAPER_TRADE_DIR, exist_ok=True)

def load_trade_plans():
    plans = []
    for f in os.listdir(TRADE_PLAN_DIR):
        if f.endswith(".csv"):
            df = pd.read_csv(os.path.join(TRADE_PLAN_DIR, f))
            plans.append(df)
    return pd.concat(plans, ignore_index=True) if plans else pd.DataFrame()

def simulate_trade_live(plan, last_price):
    entry, stop, target = plan["price"], plan["stop_price"], plan["target_price"]
    if last_price >= target:
        return "Target Hit", target-entry
    elif last_price <= stop:
        return "SL Hit", stop-entry
    return "Open", 0

def run_paper_trading():
    plans_df = load_trade_plans()
    if plans_df.empty:
        print("No trade plans found!")
        return

    from engine.utils import load_config
    cfg = load_config()
    broker = AngelBroker.get_instance(
        cfg["broker"]["api_key"],
        cfg["broker"]["client_id"],
        cfg["broker"]["password"],
        cfg["broker"]["totp_secret"]
    )

    results = []
    for _, plan in plans_df.iterrows():
        sym = plan["symbol"]
        candles = broker.historical_candles(exchange="NSE", symbol=sym, interval="FIVE_MINUTE")
        df = candles_to_df(candles)
        last_price = df["close"].iloc[-1] if not df.empty else plan["price"]
        status, pnl = simulate_trade_live(plan, last_price)
        record = plan.to_dict()
        record.update({"status": status, "pnl": pnl, "hit_time": datetime.now()})
        results.append(record)

    out_file = os.path.join(PAPER_TRADE_DIR, f"paper_trades_{datetime.now().strftime('%Y%m%d_%H%M')}.csv")
    pd.DataFrame(results).to_csv(out_file, index=False)
    print(f"Paper trading results saved to {out_file}")

if __name__ == "__main__":
    run_paper_trading()

