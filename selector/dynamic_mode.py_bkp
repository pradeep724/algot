import pandas as pd

def choose_mode_dynamic(index_df: pd.DataFrame, n_candles: int = 10) -> str:
    """
    Choose 'intraday' or 'swing' dynamically based on market trend and volatility.

    index_df: DataFrame of a market index (Nifty, BankNifty, etc.) with indicators added.
    n_candles: Number of recent candles to analyze for trend.
    """
    if index_df is None or index_df.empty or len(index_df) < n_candles:
        # fallback to time-based
        now = pd.Timestamp.now()
        hm = now.hour * 100 + now.minute
        return "intraday" if 915 <= hm <= 1530 else "swing"

    # Ensure necessary columns exist
    for col in ["ema_fast", "ema_slow", "adx", "atr", "close"]:
        if col not in index_df.columns:
            return "swing"  # default to swing if indicators not available

    # compute trend: slope of EMA_fast over last n_candles
    ema_fast = index_df["ema_fast"].iloc[-n_candles:]
    ema_slow = index_df["ema_slow"].iloc[-n_candles:]
    slope = (ema_fast.iloc[-1] / ema_fast.iloc[0] - 1.0) * 100

    # average ADX to measure trend strength
    adx_avg = index_df["adx"].iloc[-n_candles:].mean()

    # average ATR% to measure volatility
    atr_avg_pct = (index_df["atr"].iloc[-n_candles:] / index_df["close"].iloc[-n_candles:]).mean() * 100

    # Decision rules
    if adx_avg > 20 and abs(slope) > 0.2 and atr_avg_pct > 0.2:
        return "intraday"
    else:
        return "swing"
